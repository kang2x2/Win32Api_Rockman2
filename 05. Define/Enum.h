#pragma once

enum SCENEID { 
	SC_LOGO,
	SC_MENU,
	SC_SELECT_BOSS,
	SC_BOSS_INTRO,
	SC_STAGE_AIRMAN,
	SC_GAME_END, 
	SC_EDIT,
	SC_END
};
enum OBJID { OBJ_PLAYER, OBJ_ITEM, OBJ_PBULLET, OBJ_EBULLET, OBJ_ENEMY, OBJ_TILE, OBJ_MOUSE, OBJ_SHIELD, OBJ_END };
enum DIRECTION { DIR_LEFT, DIR_UP, DIR_RIGHT, DIR_DOWN, DIR_LU, DIR_RU, DIR_END };

// player
enum STATE { ST_DOWNTP, ST_UPTP, ST_SUCCESTP,
			 ST_LIDLE, ST_RIDLE, ST_LWALK, ST_RWALK,
			 ST_LATK, ST_RATK, ST_LWALK_ATK, ST_RWALK_ATK,
			 ST_LHIT, ST_RHIT, ST_LSLIDE, ST_RSLIDE, 
			 ST_LJUMP, ST_RJUMP, ST_LJUMP_MOVE, ST_RJUMP_MOVE,
			 ST_LJUMP_ATK, ST_RJUMP_ATK, ST_LJUMP_ATK_MOVE, ST_RJUMP_ATK_MOVE,
			 ST_LM_SLIDE_CHARGE, ST_RM_SLIDE_CHARGE, ST_LF_SLIDE_CHARGE, ST_RF_SLIDE_CHARGE,
			 ST_LM_JUMP_CHARGE, ST_RM_JUMP_CHARGE, ST_LF_JUMP_CHARGE, ST_RF_JUMP_CHARGE,
			 ST_LM_WALK_CHARGE, ST_RM_WALK_CHARGE, ST_LF_WALK_CHARGE, ST_RF_WALK_CHARGE,
			 ST_LM_CHARGE, ST_RM_CHARGE, ST_LF_CHARGE, ST_RF_CHARGE,
			 ST_FLY, ST_END };

// RushCoil
enum RUSH_STATE { RUSH_COME, RUSH_GROUND, RUSH_IDLE, RUSH_COIL, RUSH_BACK, RUSH_END };

// airman
enum BOSS_STATE { 
	BOSS_ST_OPIENING,
	BOSS_ST_LIDLE, BOSS_ST_RIDLE,
	BOSS_ST_LFIRE_WIND, BOSS_ST_RFIRE_WIND,
	BOSS_ST_LSPLASH_WIND, BOSS_ST_RSPLASH_WIND,
	BOSS_ST_LPUSH_WIND, BOSS_ST_RPUSH_WIND,
	BOSS_ST_LAIR_JUMP, BOSS_ST_RAIR_JUMP,
	BOSS_ST_END
};

// sound
enum CHANNELID { SOUND_EFFECT, SOUNT_ATK, SOUND_CHARGE, SOUND_GROUND, SOUND_EHIT, SOUND_REFLECT, SOUND_BGM, MAXCHANNEL };

// trigger
enum TRIGGER_ID {TRIGGER_GOBLIN, TRIGGER_CLOUD, TRIGGER_PIPI, TRIGGER_X, TRIGGEL_X, TRIGGER_Y, TRIGGER_DEAD, TRIGGER_DOOR, TRIGGER_BOSS, TRIGGER_END};

// effect
enum EFFECT_ID {EFFECT_VERY_SMALL, EFFECT_SMALL, EFFECT_MIDDLE, EFFECT_LARGE, EFFECT_PLAYER_DEAD, EFFECT_BOSS_DEAD, EFFECT_END};

// playerWeapon
enum WEAPON_ID { WEAPON_NORMAL, WEAPON_MB, WEAPON_RS, WEAPON_RUSH, WEAPON_END };